/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package loanassistant;

import java.awt.Color;
import java.text.DecimalFormat;
import javax.swing.JOptionPane;
import javax.swing.JTextField;

/**
 *
 * @author LENOVO
 */
public class LoanAssistant extends javax.swing.JFrame {

    final Color lightYellow = new Color(255, 255, 128);
    private boolean computePayment;

    /**
     * Creates new form LoanAssistant
     */
    public LoanAssistant() {
        initComponents();
        setLocationRelativeTo(null);
        computePayment = true;
        monthsButton.setFocusable(false);
        paymentButton.setFocusable(false);
        analysisTextArea.setFocusable(false);
        exitButton.setFocusable(false);
        paymentTextField.setEditable(false);
        paymentTextField.setBackground(lightYellow);
        paymentButton.setVisible(false);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        balanceLabel = new javax.swing.JLabel();
        interestLabel = new javax.swing.JLabel();
        monthsLabel = new javax.swing.JLabel();
        paymentLabel = new javax.swing.JLabel();
        balanceTextField = new javax.swing.JTextField();
        interestTextField = new javax.swing.JTextField();
        monthsTextField = new javax.swing.JTextField();
        paymentTextField = new javax.swing.JTextField();
        monthsButton = new javax.swing.JButton();
        paymentButton = new javax.swing.JButton();
        computeButton = new javax.swing.JButton();
        newLoanButton = new javax.swing.JButton();
        analysisLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        analysisTextArea = new javax.swing.JTextArea();
        exitButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("LoanAssistant");
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setResizable(false);

        balanceLabel.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        balanceLabel.setText("Loan Balance");
        balanceLabel.setAlignmentY(0.0F);

        interestLabel.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        interestLabel.setText("Interest Rate");
        interestLabel.setAlignmentY(0.0F);

        monthsLabel.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        monthsLabel.setText("Number of Payments");
        monthsLabel.setAlignmentY(0.0F);

        paymentLabel.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        paymentLabel.setText("Monthly Payent");
        paymentLabel.setAlignmentY(0.0F);

        balanceTextField.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N

        interestTextField.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N

        monthsTextField.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N

        paymentTextField.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N

        monthsButton.setText("X");
        monthsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                monthsButtonActionPerformed(evt);
            }
        });

        paymentButton.setText("X");
        paymentButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                paymentButtonActionPerformed(evt);
            }
        });

        computeButton.setText("Compute Monthly Payments");
        computeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                computeButtonActionPerformed(evt);
            }
        });

        newLoanButton.setText("New Loan Analysis");
        newLoanButton.setEnabled(false);
        newLoanButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newLoanButtonActionPerformed(evt);
            }
        });

        analysisLabel.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        analysisLabel.setText("Loan Analysis:");

        analysisTextArea.setEditable(false);
        analysisTextArea.setColumns(20);
        analysisTextArea.setRows(5);
        analysisTextArea.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                analysisTextAreaMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(analysisTextArea);

        exitButton.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        exitButton.setText("Exit");
        exitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(interestLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(balanceLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(paymentLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(monthsLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(39, 39, 39)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(balanceTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(interestTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(paymentTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(monthsTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(monthsButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(paymentButton)))))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(61, 61, 61)
                                .addComponent(newLoanButton, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(50, 50, 50)
                                .addComponent(computeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(analysisLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(exitButton)
                                .addGap(99, 99, 99)))))
                .addContainerGap(22, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(balanceLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(interestLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(monthsLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(paymentLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(127, 127, 127))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(balanceTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(analysisLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jScrollPane1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(exitButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(28, 28, 28))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(interestTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(monthsTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(monthsButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(paymentTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(paymentButton))
                                .addGap(5, 5, 5)
                                .addComponent(computeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(newLoanButton, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))))))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void paymentButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_paymentButtonActionPerformed
    computePayment = true;
    paymentButton.setFocusable(false);
    monthsTextField.setFocusable(true);
    paymentTextField.setFocusable(false);
    balanceTextField.requestFocus();
    paymentButton.setVisible(false);
    monthsButton.setVisible(true);
    monthsTextField.setEditable(true);
    monthsTextField.setBackground(Color.WHITE);
    paymentTextField.setText("");
    paymentTextField.setEditable(false);
    paymentTextField.setBackground(lightYellow);
    computeButton.setText("Compute Monthly Payment");
    }//GEN-LAST:event_paymentButtonActionPerformed

    private void monthsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_monthsButtonActionPerformed
    computePayment = false;
    monthsButton.setFocusable(false);
    monthsTextField.setEditable(false);
    monthsTextField.setFocusable(false);
    paymentTextField.setFocusable(true);
    balanceTextField.requestFocus();
    paymentButton.setVisible(true);
    monthsButton.setVisible(false);
    monthsTextField.setText("");
    monthsTextField.setEditable(false);
    monthsTextField.setBackground(lightYellow);
    paymentTextField.setEditable(true);
    paymentTextField.setBackground(Color.WHITE);
    computeButton.setText("Compute Number of Payments");
    }//GEN-LAST:event_monthsButtonActionPerformed

    private void analysisTextAreaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_analysisTextAreaMouseClicked
        
    }//GEN-LAST:event_analysisTextAreaMouseClicked

    private void computeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_computeButtonActionPerformed
    double balance, interest, payment;
    int months;
    double monthlyInterest, multiplier;
    double loanBalance, finalPayment;
    if (validateDecimalNumber(balanceTextField))
    {
    balance = Double.valueOf(balanceTextField.getText()).doubleValue();
    }
    else
    {
    JOptionPane.showConfirmDialog(null, "Invalid or empty Loan Balance entry.\nPleasecorrect.", "Balance Input Error", JOptionPane.DEFAULT_OPTION,JOptionPane.INFORMATION_MESSAGE);
    return;
    }
    if (validateDecimalNumber(interestTextField))
    {
    interest = Double.valueOf(interestTextField.getText()).doubleValue();
    }
    else
    {
    JOptionPane.showConfirmDialog(null, "Invalid or empty Interest Rate entry.\nPleasecorrect.", "Interest Input Error", JOptionPane.DEFAULT_OPTION,JOptionPane.INFORMATION_MESSAGE);
    return;
    }
    monthlyInterest = interest / 1200;
    if (computePayment)
    {
// Compute loan payment
    if (validateDecimalNumber(monthsTextField))
    {
    months = Integer.valueOf(monthsTextField.getText()).intValue();
    }
    else
    {
    JOptionPane.showConfirmDialog(null, "Invalid or empty Number of Paymentsentry.\nPlease correct.", "Number of Payments Input Error",JOptionPane.DEFAULT_OPTION, JOptionPane.INFORMATION_MESSAGE);
    return;
    }
    if (interest == 0)
    {
    payment = balance / months;
    }
    else
    {
    multiplier = Math.pow(1 + monthlyInterest, months);
    payment = balance * monthlyInterest * multiplier / (multiplier - 1);
    }
    paymentTextField.setText(new DecimalFormat("0.00").format(payment));
    }
    else
    {
// Compute number of payments
    if (validateDecimalNumber(paymentTextField))
    {
    payment = Double.valueOf(paymentTextField.getText()).doubleValue();
    if (payment <= (balance * monthlyInterest + 1.0))
    {
    if (JOptionPane.showConfirmDialog(null, "Minimum payment must be $" +new DecimalFormat("0.00").format((int)(balance * monthlyInterest + 1.0)) + "\n" + "Do youwant to use the minimum payment?", "Input Error", JOptionPane.YES_NO_OPTION,JOptionPane.QUESTION_MESSAGE) == JOptionPane.YES_OPTION)
    {
    paymentTextField.setText(new DecimalFormat("0.00").format((int)(balance *monthlyInterest + 1.0)));
    payment =Double.valueOf(paymentTextField.getText()).doubleValue();
    }
    else
    {
    paymentTextField.requestFocus();
    return;
    }   
    }
    }
    else
    {
    JOptionPane.showConfirmDialog(null, "Invalid or empty Monthly Paymententry.\nPlease correct.", "Payment Input Error", JOptionPane.DEFAULT_OPTION,JOptionPane.INFORMATION_MESSAGE);
    return;
    }
    if (interest == 0)
    {
    months = (int)(balance / payment);
    }
    else
    {
    months = (int)((Math.log(payment) - Math.log(payment - balance * monthlyInterest)) /
    Math.log(1 + monthlyInterest));
    }
    monthsTextField.setText(String.valueOf(months));
    }
// reset payment prior to analysis to fix at two decimals
    payment =
    Double.valueOf(paymentTextField.getText()).doubleValue();
    // show analysis
    analysisTextArea.setText("Loan Balance: $" + new
    DecimalFormat("0.00").format(balance));
    analysisTextArea.append("\n" + "Interest Rate: " + new
    DecimalFormat("0.00").format(interest) + "%");
    // process all but last payment
    loanBalance = balance;
    for (int paymentNumber = 1; paymentNumber <= months - 1; paymentNumber++)
    {
    loanBalance += loanBalance * monthlyInterest - payment;
    }
    // find final payment
    finalPayment = loanBalance;
    if (finalPayment > payment)
    {
    // apply one more payment
    loanBalance += loanBalance * monthlyInterest - payment;
    finalPayment = loanBalance;
    months++;
    monthsTextField.setText(String.valueOf(months));
    }
    analysisTextArea.append("\n\n" + String.valueOf(months - 1) + " Payments of $" + new
    DecimalFormat("0.00").format(payment));
    analysisTextArea.append("\n" + "Final Payment of: $" + new
    DecimalFormat("0.00").format(finalPayment));
    analysisTextArea.append("\n" + "Total Payments: $" + new
    DecimalFormat("0.00").format((months - 1) * payment + finalPayment));
    analysisTextArea.append("\n" + "Interest Paid $" + new
    DecimalFormat("0.00").format((months - 1) * payment + finalPayment - balance));
    computeButton.setEnabled(false);
    newLoanButton.setEnabled(true);
    newLoanButton.requestFocus();
    }//GEN-LAST:event_computeButtonActionPerformed

    private void exitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitButtonActionPerformed
        System.exit(0);
    }//GEN-LAST:event_exitButtonActionPerformed

    private void newLoanButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newLoanButtonActionPerformed
        // clear computed value and analysis
    if (computePayment)
    {
    paymentTextField.setText("");
    }
    else
    {
    monthsTextField.setText("");
    }   
    analysisTextArea.setText("");
    computeButton.setEnabled(true);
    newLoanButton.setEnabled(false);
    balanceTextField.requestFocus();
    }//GEN-LAST:event_newLoanButtonActionPerformed

    
    private boolean validateDecimalNumber(JTextField tf)
{
// checks to see if text field contains
// valid decimal number with only digits and a single decimal point
    String s = tf.getText().trim();
    boolean hasDecimal = false;
    boolean valid = true;
    if (s.length() == 0)
    {
    valid = false;
    }
    else
    {
    for (int i = 0; i < s.length(); i++)
    {
    char c = s.charAt(i);
    if (c >= '0' && c <= '9')
    {
    continue;
    }
    else if (c == '.' && !hasDecimal)
    {
    hasDecimal = true;
    }
    else
    {
    // invalid character found
    valid = false;
    }
    }
    }
    tf.setText(s);
    if (!valid)
    {
    tf.requestFocus();
    }
    return (valid);
}


    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(LoanAssistant.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(LoanAssistant.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(LoanAssistant.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(LoanAssistant.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new LoanAssistant().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel analysisLabel;
    private javax.swing.JTextArea analysisTextArea;
    private javax.swing.JLabel balanceLabel;
    private javax.swing.JTextField balanceTextField;
    private javax.swing.JButton computeButton;
    private javax.swing.JButton exitButton;
    private javax.swing.JLabel interestLabel;
    private javax.swing.JTextField interestTextField;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton monthsButton;
    private javax.swing.JLabel monthsLabel;
    private javax.swing.JTextField monthsTextField;
    private javax.swing.JButton newLoanButton;
    private javax.swing.JButton paymentButton;
    private javax.swing.JLabel paymentLabel;
    private javax.swing.JTextField paymentTextField;
    // End of variables declaration//GEN-END:variables
}
